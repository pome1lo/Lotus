version: '3.4'

networks:
  backend:
  frontend:

volumes:
  auth_proto_volume:
  notify_proto_volume:

services:
  # webuireact:
  #   container_name: web-ui-react
  #   build:
  #     context: ./UI/client.react
  #     dockerfile: ./Dockerfile
  #   volumes:
  #     - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.key:/app/LAB.key
  #     - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.crt:/app/LAB.crt
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - notificationwebapi
  #     - authenticationwebapi
  #     - profilewebapi
  #     - recommendationwebapi
  #     - authdb

  notificationwebapi:
    container_name: notification-web-api
    image: ${DOCKER_REGISTRY-}notificationwebapi
    build:
      context: ./Microservices/notification.service/
      dockerfile: ./Dockerfile
    environment:
      - APP_PORT=31902
      - GRPC_PORT=19002
      - GRPC_PORT_AUTH_SERVICE=19001
      - RABBITMQ_HOST=sendToQueue.js
      - RABBITMQ_PORT=5672
      - SECRET_KEY=12AASF213ASDMaMDSKASK123ksmdaasl0o4askmd123k9asdfja
    ports:
      - "31902:31902"
    networks:
    - backend
    volumes:
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.key:/app/LAB.key
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.crt:/app/LAB.crt
    depends_on:
      - redis
      - rabbitmq

  authenticationwebapi:
    container_name: authentication-web-api
    image: ${DOCKER_REGISTRY-}authenticationwebapi
    build:
      context: ./Microservices/authentication.service
      dockerfile: ./Dockerfile
    environment:
      - DB_HOST=authdb
      - DB_NAME=AUTHENTICATION_SERVICE
      - DB_PORT=40005
      - DB_PASSWORD=password@12345
      - RABBITMQ_HOST=sendToQueue.js
      - RABBITMQ_PORT=5672
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_PORT=31901
      - GRPC_PORT=19001
      - GRPC_PORT_NOTIFY_SERVICE=19002
      - SECRET_KEY=12AASF213ASDMaMDSKASK123ksmdaasl0o4askmd123k9asdfja
    ports:
      - "31901:31901"
    volumes:
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/protos/auth.proto:/app/auth.proto
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/protos/notify.proto:/app/notify.proto
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.key:/app/LAB.key
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.crt:/app/LAB.crt
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/configs/tsconfig_auth.json:/app/tsconfig_auth.json
    networks:
      - backend
    depends_on:
      - redis
      - rabbitmq

  profilewebapi:
    container_name: profile-web-api
    image: ${DOCKER_REGISTRY-}profilewebapi
    build:
      context: ./Microservices/profile.service
      dockerfile: ./Dockerfile
    environment:
      - DB_HOST=profiledb
      - DB_NAME=PROFILE_SERVICE
      - DB_PORT=40006
      - DB_PASSWORD=password@12345
      - RABBITMQ_HOST=sendToQueue.js
      - RABBITMQ_PORT=5672
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_PORT=31903
      - SECRET_KEY=12AASF213ASDMaMDSKASK123ksmdaasl0o4askmd123k9asdfja
    volumes:
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/protos/auth.proto:/app/auth.proto
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/protos/notify.proto:/app/notify.proto
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.key:/app/LAB.key
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.crt:/app/LAB.crt
    ports:
      - "31903:31903"
    networks:
      - backend

  recommendationwebapi:
    container_name: recommendation-web-api
    image: ${DOCKER_REGISTRY-}recommendationwebapi
    build:
      context: ./Microservices/recommendation.service
      dockerfile: ./Dockerfile
    environment:
      - DB_HOST=recommendation-db
      - DB_NAME=RECOMMENDATION_SERVICE
      - DB_PORT=40007
      - DB_PASSWORD=password@12345
      - APP_PORT=31904
      - SECRET_KEY=12AASF213ASDMaMDSKASK123ksmdaasl0o4askmd123k9asdfja
    volumes:
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.key:/app/LAB.key
      - D:/FILES/University/3 course/2term/Course Project/Lotus/Static/ssl/LAB.crt:/app/LAB.crt
    ports:
      - "31904:31904"
    networks:
      - backend

  authdb:
    container_name: auth-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@12345
    networks:
      - backend
    ports:
      - "40005:1433"

  profiledb:
    container_name: profile-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@12345
    networks:
      - backend
    ports:
      - "40006:1433"

  recommendationdb:
    container_name: recommendation-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=password@12345
    networks:
      - backend
    ports:
      - "40007:1433"

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - backend

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - "5672:5672"
    networks:
      - backend
